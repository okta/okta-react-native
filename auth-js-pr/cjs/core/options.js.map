{"version":3,"file":"options.js","names":["createCoreOptionsConstructor","OAuthOptionsConstructor","createOAuthOptionsConstructor","CoreOptionsConstructor","constructor","options","services","transformAuthState"],"sources":["../../../lib/core/options.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOAuthOptionsConstructor } from '../oidc';\nimport { AuthState, OktaAuthCoreInterface, OktaAuthCoreOptions, ServiceManagerOptions } from './types';\n\n\nexport function createCoreOptionsConstructor()\n{\n  const OAuthOptionsConstructor = createOAuthOptionsConstructor();\n  return class CoreOptionsConstructor\n    extends OAuthOptionsConstructor\n    implements Required<OktaAuthCoreOptions>\n  {\n    services: ServiceManagerOptions;\n    transformAuthState: (oktaAuth: OktaAuthCoreInterface, authState: AuthState) => Promise<AuthState>;\n\n    constructor(options: any) {\n      super(options);\n      this.services = options.services;\n      this.transformAuthState = options.transformAuthState;\n    }\n  };\n}\n"],"mappings":";;;AAYA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,SAASA,4BAA4B,GAC5C;EACE,MAAMC,uBAAuB,GAAG,IAAAC,mCAA6B,GAAE;EAC/D,OAAO,MAAMC,sBAAsB,SACzBF,uBAAuB,CAEjC;IAIEG,WAAW,CAACC,OAAY,EAAE;MACxB,KAAK,CAACA,OAAO,CAAC;MACd,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;MAChC,IAAI,CAACC,kBAAkB,GAAGF,OAAO,CAACE,kBAAkB;IACtD;EACF,CAAC;AACH"}