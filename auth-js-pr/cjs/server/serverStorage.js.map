{"version":3,"file":"serverStorage.js","names":["sharedStorage","NodeCache","ServerCookies","constructor","nodeCache","set","name","value","expiresAt","Date","parse","ttl","now","get","delete","del","ServerStorage","storage","testStorageType","storageType","supported","getStorageByType","storageProvider","getStorage","AuthSdkError","findStorageType","getItem","setItem","key"],"sources":["../../../lib/server/serverStorage.ts"],"sourcesContent":["/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport NodeCache from 'node-cache';\nimport { SimpleStorage, StorageType, StorageUtil, Cookies } from '../storage/types';\nimport { AuthSdkError } from '../errors';\n// eslint-disable-next-line import/no-commonjs\n\n// this is a SHARED memory storage to support a stateless http server\nconst sharedStorage = typeof NodeCache === 'function' ? new NodeCache() : null;\n\nclass ServerCookies implements Cookies {\n  nodeCache: any; // NodeCache\n  \n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n  }\n\n  set(name: string, value: string, expiresAt: string): string {\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!(Date.parse(expiresAt))) {\n      // Time to expiration in seconds\n      var ttl = (Date.parse(expiresAt) - Date.now()) / 1000;\n      this.nodeCache.set(name, value, ttl);\n    } else {\n      this.nodeCache.set(name, value);\n    }\n\n    return this.get(name);\n  }\n\n  get(name): string {\n    return this.nodeCache.get(name);\n  }\n\n  delete(name) {\n    return this.nodeCache.del(name);\n  }\n}\n// Building this as an object allows us to mock the functions in our tests\nclass ServerStorage implements StorageUtil {\n  nodeCache: any; // NodeCache\n  storage: Cookies;\n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n    this.storage = new ServerCookies(nodeCache);\n  }\n\n  testStorageType(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        break;\n    }\n    return supported;\n  }\n\n  getStorageByType(storageType: StorageType): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'memory':\n        storageProvider = this.getStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  }\n\n  findStorageType(): StorageType {\n    return 'memory';\n  }\n\n  // shared in-memory using node cache\n  getStorage(): SimpleStorage {\n    return {\n      getItem: this.nodeCache.get,\n      setItem: (key, value) => {\n        this.nodeCache.set(key, value, '2200-01-01T00:00:00.000Z');\n      },\n    };\n  }\n}\n\nexport default new ServerStorage(sharedStorage);\n"],"mappings":";;;;AAgBA;AAEA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;;AAEA;AACA,MAAMA,aAAa,GAAG,OAAOC,kBAAS,KAAK,UAAU,GAAG,IAAIA,kBAAS,EAAE,GAAG,IAAI;AAE9E,MAAMC,aAAa,CAAoB;EACrB;;EAEhBC,WAAW,CAACC,SAAS,EAAE;IACrB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;EAEAC,GAAG,CAACC,IAAY,EAAEC,KAAa,EAAEC,SAAiB,EAAU;IAC1D;IACA,IAAI,CAAC,CAAEC,IAAI,CAACC,KAAK,CAACF,SAAS,CAAE,EAAE;MAC7B;MACA,IAAIG,GAAG,GAAG,CAACF,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,GAAGC,IAAI,CAACG,GAAG,EAAE,IAAI,IAAI;MACrD,IAAI,CAACR,SAAS,CAACC,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAEI,GAAG,CAAC;IACtC,CAAC,MAAM;MACL,IAAI,CAACP,SAAS,CAACC,GAAG,CAACC,IAAI,EAAEC,KAAK,CAAC;IACjC;IAEA,OAAO,IAAI,CAACM,GAAG,CAACP,IAAI,CAAC;EACvB;EAEAO,GAAG,CAACP,IAAI,EAAU;IAChB,OAAO,IAAI,CAACF,SAAS,CAACS,GAAG,CAACP,IAAI,CAAC;EACjC;EAEAQ,MAAM,CAACR,IAAI,EAAE;IACX,OAAO,IAAI,CAACF,SAAS,CAACW,GAAG,CAACT,IAAI,CAAC;EACjC;AACF;AACA;AACA,MAAMU,aAAa,CAAwB;EACzB;;EAEhBb,WAAW,CAACC,SAAS,EAAE;IACrB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACa,OAAO,GAAG,IAAIf,aAAa,CAACE,SAAS,CAAC;EAC7C;EAEAc,eAAe,CAACC,WAAwB,EAAW;IACjD,IAAIC,SAAS,GAAG,KAAK;IACrB,QAAQD,WAAW;MACjB,KAAK,QAAQ;QACXC,SAAS,GAAG,IAAI;QAChB;MACF;QACE;IAAM;IAEV,OAAOA,SAAS;EAClB;EAEAC,gBAAgB,CAACF,WAAwB,EAAiB;IACxD,IAAIG,eAAe;IACnB,QAAQH,WAAW;MACjB,KAAK,QAAQ;QACXG,eAAe,GAAG,IAAI,CAACC,UAAU,EAAE;QACnC;MACF;QACE,MAAM,IAAIC,oBAAY,CAAE,gCAA+BL,WAAY,EAAC,CAAC;QACrE;IAAM;IAEV,OAAOG,eAAe;EACxB;EAEAG,eAAe,GAAgB;IAC7B,OAAO,QAAQ;EACjB;;EAEA;EACAF,UAAU,GAAkB;IAC1B,OAAO;MACLG,OAAO,EAAE,IAAI,CAACtB,SAAS,CAACS,GAAG;MAC3Bc,OAAO,EAAE,CAACC,GAAG,EAAErB,KAAK,KAAK;QACvB,IAAI,CAACH,SAAS,CAACC,GAAG,CAACuB,GAAG,EAAErB,KAAK,EAAE,0BAA0B,CAAC;MAC5D;IACF,CAAC;EACH;AACF;AAAC,eAEc,IAAIS,aAAa,CAAChB,aAAa,CAAC;AAAA;AAAA"}