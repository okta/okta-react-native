{"version":3,"file":"types.js","names":[],"sources":["../../../lib/session/types.ts"],"sourcesContent":["import { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { StorageManagerInterface } from '../storage/types';\n\n// Session API\nexport interface SessionObject {\n  status: string;\n  refresh?: () => Promise<object>;\n  user?: () => Promise<object>;\n}\n\nexport interface SessionAPI {\n  close: () => Promise<object>;\n  exists: () => Promise<boolean>;\n  get: () => Promise<SessionObject>;\n  refresh: () => Promise<object>;\n  setCookieAndRedirect: (sessionToken?: string, redirectUri?: string) => void;\n}\n\nexport interface OktaAuthSessionInterface\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions\n> \n  extends OktaAuthHttpInterface<S, O>\n{\n  session: SessionAPI;\n  closeSession(): Promise<boolean>;\n}\n"],"mappings":""}