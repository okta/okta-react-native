{"version":3,"file":"makeIdxState.js","names":["makeIdxState","authClient","idxResponse","toPersist","requestDidSucceed","rawIdxResponse","remediations","context","actions","parseIdxResponse","neededToProceed","proceed","remediationChoice","paramsFromUser","remediationChoiceObject","find","remediation","name","Promise","reject","actionFn","action","findCode","item","interactionCode","successWithInteractionCode","value","rawIdxState"],"sources":["../../../../../lib/idx/idxState/v1/makeIdxState.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, RawIdxResponse } from '../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthIdxInterface,\n  idxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    const actionFn = remediationChoiceObject.action;\n    if (typeof actionFn !== 'function') {\n      return Promise.reject(`Current remediation cannot make form submit action: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action(paramsFromUser);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n"],"mappings":";;;AAcA;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGuE;;AAGhE,SAASA,YAAY,CAC1BC,UAAgC,EAChCC,WAA2B,EAC3BC,SAAuB,EACvBC,iBAA0B,EACb;EAAA;EACb,MAAMC,cAAc,GAAIH,WAAW;EACnC,MAAM;IAAEI,YAAY;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAG,IAAAC,mCAAgB,EAAER,UAAU,EAAEC,WAAW,EAAEC,SAAS,CAAE;EACjG,MAAMO,eAAe,GAAG,CAAC,GAAGJ,YAAY,CAAC;EAEzC,MAAMK,OAA+B,GAAG,gBAAgBC,iBAAiB,EAAEC,cAAc,GAAG,CAAC,CAAC,EAAG;IAC/F;AACJ;AACA;AACA;AACA;AACA;IACI,MAAMC,uBAAuB,GAAGR,YAAY,CAACS,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAACC,IAAI,KAAKL,iBAAiB,CAAC;IAC1G,IAAK,CAACE,uBAAuB,EAAG;MAC9B,OAAOI,OAAO,CAACC,MAAM,CAAE,gCAA+BP,iBAAkB,GAAE,CAAC;IAC7E;IAEA,MAAMQ,QAAQ,GAAGN,uBAAuB,CAACO,MAAM;IAC/C,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;MAClC,OAAOF,OAAO,CAACC,MAAM,CAAE,wDAAuDP,iBAAkB,GAAE,CAAC;IACrG;IAEA,OAAOE,uBAAuB,CAACO,MAAM,CAACR,cAAc,CAAC;EACvD,CAAC;EAED,MAAMS,QAAQ,GAAGC,IAAI,IAAIA,IAAI,CAACN,IAAI,KAAK,kBAAkB;EACzD,MAAMO,eAAe,4BAAGnB,cAAc,CAACoB,0BAA0B,oFAAzC,sBAA2CC,KAAK,qFAAhD,uBAAkDX,IAAI,CAAEO,QAAQ,CAAE,2DAAlE,uBAAoEI,KAAe;EAE3G,OAAO;IACLf,OAAO;IACPD,eAAe;IACfF,OAAO;IACPD,OAAO;IACPoB,WAAW,EAAEtB,cAAc;IAC3BmB,eAAe;IACfrB,SAAS;IACTC;EACF,CAAC;AACH"}