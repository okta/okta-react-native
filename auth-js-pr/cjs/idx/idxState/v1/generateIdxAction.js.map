{"version":3,"file":"generateIdxAction.js","names":["generateDirectFetch","authClient","actionDefinition","defaultParamsForAction","immutableParamsForAction","toPersist","target","href","params","headers","accepts","body","JSON","stringify","response","httpRequest","url","method","args","withCredentials","idx","makeIdxResponse","err","AuthApiError","xhr","payload","responseJSON","parse","responseText","wwwAuthHeader","idxResponse","status","stepUp","generateIdxAction","generator","defaultParams","neededParams","immutableParams","divideActionParamsByMutability","action","name"],"sources":["../../../../../lib/idx/idxState/v1/generateIdxAction.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n"],"mappings":"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"}