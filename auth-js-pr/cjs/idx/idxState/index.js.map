{"version":3,"file":"index.js","names":["parsersForVersion","version","v1","undefined","Error","validateVersionConfig","cleanVersion","replace","makeIdxState","authClient","rawIdxResponse","toPersist","requestDidSucceed","IDX_API_VERSION"],"sources":["../../../../lib/idx/idxState/index.ts"],"sourcesContent":["import { OktaAuthIdxInterface } from '../types';    // auth-js/types\nimport { IdxResponse, IdxToPersist, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthIdxInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n"],"mappings":";;;;;;AAEA;AACA;AAHoD;AAC8B;;AAK3E,MAAMA,iBAAiB,GAAG,SAASA,iBAAiB,CAAEC,OAAO,EAAG;EACrE,QAAQA,OAAO;IACb,KAAK,OAAO;MACV,OAAOC,gBAAE;IACX,KAAKC,SAAS;IACd,KAAK,IAAI;MACP,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;MACE,MAAM,IAAIA,KAAK,CAAE,wBAAuBH,OAAQ,iCAAgC,CAAC;EAAC;AAExF,CAAC;AAAC;AAEK,SAASI,qBAAqB,CAACJ,OAAO,EAAE;EAC7C,IAAK,CAACA,OAAO,EAAG;IACd,MAAM,IAAIG,KAAK,CAAC,qBAAqB,CAAC;EACxC;EAEA,MAAME,YAAY,GAAG,CAACL,OAAO,IAAI,EAAE,EAAEM,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;EACnE,IAAKD,YAAY,KAAKL,OAAO,IAAI,CAACA,OAAO,EAAG;IAC1C,MAAM,IAAIG,KAAK,CAAC,uEAAuE,CAAC;EAC1F;EAEAJ,iBAAiB,CAACC,OAAO,CAAC,CAAC,CAAC;AAC9B;;AAEO,SAASO,YAAY,CAC1BC,UAAgC,EAChCC,cAA8B,EAC9BC,SAAuB,EACvBC,iBAA0B,EACb;EACb,MAAMX,OAAO,GAAG,CAAAS,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAET,OAAO,KAAIY,0BAAe;EAC1DR,qBAAqB,CAACJ,OAAO,CAAC;EAE9B,MAAM;IAAEO;EAAa,CAAC,GAAGR,iBAAiB,CAACC,OAAO,CAAC;EACnD,OAAOO,YAAY,CAACC,UAAU,EAAEC,cAAc,EAAEC,SAAS,EAAEC,iBAAiB,CAAC;AAC/E"}