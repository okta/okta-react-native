{"version":3,"file":"getAuthenticator.js","names":["getAuthenticator","remediation","relatesTo","value","key","AuthenticatorKey","OKTA_PASSWORD","OktaPassword","SECURITY_QUESTION","contextualData","enrolledQuestion","SecurityQuestionVerification","SecurityQuestionEnrollment","OKTA_VERIFY","OktaVerifyTotp","WEBAUTHN","challengeData","WebauthnVerification","WebauthnEnrollment","VerificationCodeAuthenticator"],"sources":["../../../../lib/idx/authenticator/getAuthenticator.ts"],"sourcesContent":["import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACO,SAASA,gBAAgB,CAACC,WAA2B,EAAsB;EAAA;EAChF,MAAMC,SAAS,GAAGD,WAAW,CAACC,SAAS;EACvC,MAAMC,KAAK,GAAG,CAAAD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEC,KAAK,KAAI,CAAC,CAAqB;EACxD,QAAQA,KAAK,CAACC,GAAG;IACf,KAAKC,uBAAgB,CAACC,aAAa;MACjC,OAAO,IAAIC,0BAAY,CAACJ,KAAK,CAAC;IAChC,KAAKE,uBAAgB,CAACG,iBAAiB;MACrC,6BAAIL,KAAK,CAACM,cAAc,kDAApB,sBAAsBC,gBAAgB,EAAE;QAC1C,OAAO,IAAIC,0DAA4B,CAACR,KAAK,CAAC;MAChD,CAAC,MAAM;QACL,OAAO,IAAIS,sDAA0B,CAACT,KAAK,CAAC;MAC9C;IACF,KAAKE,uBAAgB,CAACQ,WAAW;MAC/B,OAAO,IAAIC,8BAAc,CAACX,KAAK,CAAC;IAClC,KAAKE,uBAAgB,CAACU,QAAQ;MAC5B,8BAAIZ,KAAK,CAACM,cAAc,mDAApB,uBAAsBO,aAAa,EAAE;QACvC,OAAO,IAAIC,0CAAoB,CAACd,KAAK,CAAC;MACxC,CAAC,MAAM;QACL,OAAO,IAAIe,sCAAkB,CAACf,KAAK,CAAC;MACtC;IACF;MACE,OAAO,IAAIgB,4DAA6B,CAAChB,KAAK,CAAC;EAAC;AAEtD"}