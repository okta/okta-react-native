{"version":3,"file":"interact.js","names":["getResponse","meta","interactionHandle","state","interact","authClient","options","removeNils","getSavedTransactionMeta","createTransactionMeta","baseUrl","getOAuthBaseUrl","clientId","redirectUri","scopes","withCredentials","codeChallenge","codeChallengeMethod","activationToken","recoveryToken","maxAge","acrValues","nonce","clientSecret","url","params","client_id","scope","join","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","max_age","acr_values","headers","resp","httpRequest","method","args","interaction_handle","newMeta","saveTransactionMeta"],"sources":["../../../lib/idx/interact.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from './types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n  acr_values?: string;\n  nonce?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues,\n    nonce\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge }),\n    ...(acrValues && { acr_values: acrValues }),\n    ...(nonce && { nonce }),\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n"],"mappings":";;;AAcA;AACA;AACA;AACA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAuBA;;AAEA,SAASA,WAAW,CAACC,IAAwB,EAAoB;EAC/D,OAAO;IACLA,IAAI;IACJC,iBAAiB,EAAED,IAAI,CAACC,iBAAkB;IAC1CC,KAAK,EAAEF,IAAI,CAACE;EACd,CAAC;AACH;;AAEA;AACO,eAAeC,QAAQ,CAC5BC,UAAgC,EAChCC,OAAwB,GAAG,CAAC,CAAC,EACF;EAAA;EAC3BA,OAAO,GAAG,IAAAC,gBAAU,EAACD,OAAO,CAAC;EAE7B,IAAIL,IAAI,GAAG,IAAAO,wCAAuB,EAACH,UAAU,EAAEC,OAAO,CAAC;EACvD;;EAEA,aAAIL,IAAI,kCAAJ,MAAMC,iBAAiB,EAAE;IAC3B,OAAOF,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5B;;EAEA;EACAA,IAAI,GAAG,MAAM,IAAAQ,sCAAqB,EAACJ,UAAU,EAAE;IAAE,GAAGJ,IAAI;IAAE,GAAGK;EAAQ,CAAC,CAAC;EACvE,MAAMI,OAAO,GAAG,IAAAC,qBAAe,EAACN,UAAU,CAAC;EAC3C,IAAI;IACFO,QAAQ;IACRC,WAAW;IACXV,KAAK;IACLW,MAAM;IACNC,eAAe;IACfC,aAAa;IACbC,mBAAmB;IACnBC,eAAe;IACfC,aAAa;IACbC,MAAM;IACNC,SAAS;IACTC;EACF,CAAC,GAAGrB,IAA0B;EAC9B,MAAMsB,YAAY,GAAGjB,OAAO,CAACiB,YAAY,IAAIlB,UAAU,CAACC,OAAO,CAACiB,YAAY;EAC5ER,eAAe,GAAGA,eAAe,IAAI,IAAI;;EAEzC;EACA,MAAMS,GAAG,GAAI,GAAEd,OAAQ,cAAa;EACpC,MAAMe,MAAM,GAAG;IACbC,SAAS,EAAEd,QAAQ;IACnBe,KAAK,EAAEb,MAAM,CAAEc,IAAI,CAAC,GAAG,CAAC;IACxBC,YAAY,EAAEhB,WAAW;IACzBiB,cAAc,EAAEd,aAAa;IAC7Be,qBAAqB,EAAEd,mBAAmB;IAC1Cd,KAAK;IACL,IAAIe,eAAe,IAAI;MAAEc,gBAAgB,EAAEd;IAAgB,CAAC,CAAC;IAC7D,IAAIC,aAAa,IAAI;MAAEc,cAAc,EAAEd;IAAc,CAAC,CAAC;IACvD;IACA;IACA;IACA,IAAII,YAAY,IAAI;MAAEW,aAAa,EAAEX;IAAa,CAAC,CAAC;IACpD,IAAIH,MAAM,IAAI;MAAEe,OAAO,EAAEf;IAAO,CAAC,CAAC;IAClC,IAAIC,SAAS,IAAI;MAAEe,UAAU,EAAEf;IAAU,CAAC,CAAC;IAC3C,IAAIC,KAAK,IAAI;MAAEA;IAAM,CAAC;EACxB,CAAmB;EACnB;;EAEA,MAAMe,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;EAED,MAAMC,IAAI,GAAG,MAAM,IAAAC,iBAAW,EAAClC,UAAU,EAAE;IACzCmC,MAAM,EAAE,MAAM;IACdhB,GAAG;IACHa,OAAO;IACPtB,eAAe;IACf0B,IAAI,EAAEhB;EACR,CAAC,CAAC;EACF,MAAMvB,iBAAiB,GAAGoC,IAAI,CAACI,kBAAkB;EAEjD,MAAMC,OAAO,GAAG;IACd,GAAG1C,IAAI;IACPC,iBAAiB;IAEjB;IACAa,eAAe;IACfZ,KAAK;IACLW,MAAM;IACNK,aAAa;IACbD;EACF,CAAC;EACD;EACA,IAAA0B,oCAAmB,EAACvC,UAAU,EAAEsC,OAAO,CAAC;EAExC,OAAO3C,WAAW,CAAC2C,OAAO,CAAC;AAC7B"}