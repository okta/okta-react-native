{"version":3,"file":"options.js","names":[],"sources":["../../../../lib/idx/types/options.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { RemediationFlow } from '../flow';\nimport { RemediateAction } from '../remediate';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  AuthenticatorVerificationDataValues,\n  EnrollProfileValues,\n  ResetAuthenticatorValues,\n  SelectAuthenticatorUnlockAccountValues,\n  SkipValues,\n  EnrollPollValues as EnrollPollOptions,\n  SelectEnrollmentChannelValues as SelectEnrollmentChannelOptions,\n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n} from '../remediators';\nimport { IdxTransactionMeta } from './meta';\nimport { OktaAuthCoreOptions } from '../../core/types';\nimport { TransactionMetaOptions } from '../../oidc/types';\nimport { OktaAuthOptionsConstructor } from '../../base/types';\n\nexport interface IdxOptions {\n  flow?: FlowIdentifier;\n  exchangeCodeForTokens?: boolean;\n  autoRemediate?: boolean;\n  step?: string;\n  withCredentials?: boolean;\n}\n\nexport interface InteractOptions extends IdxOptions {\n  state?: string;\n  scopes?: string[];\n  codeChallenge?: string;\n  codeChallengeMethod?: string;\n  activationToken?: string;\n  recoveryToken?: string;\n  clientSecret?: string;\n  maxAge?: string | number;\n  acrValues?: string;\n  nonce?: string;\n}\n\nexport interface IntrospectOptions extends IdxOptions {\n  interactionHandle?: string;\n  stateHandle?: string;\n  version?: string;\n}\n\nexport interface RemediateOptions extends IdxOptions {\n  remediators?: RemediationFlow;\n  actions?: RemediateAction[];\n  useGenericRemediator?: boolean; // beta\n}\n\nexport interface RunOptions extends RemediateOptions, InteractOptions, IntrospectOptions {}\n\nexport interface AuthenticationOptions extends\n  RunOptions, \n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  SelectAuthenticatorEnrollValues,\n  ChallengeAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  EnrollAuthenticatorValues\n{}\n\nexport interface RegistrationOptions extends\n  RunOptions,\n  IdentifyValues,\n  EnrollProfileValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SkipValues\n{}\n\nexport interface PasswordRecoveryOptions extends \n  RunOptions,\n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  ResetAuthenticatorValues,\n  AuthenticatorVerificationDataValues,\n  ReEnrollAuthenticatorValues\n{}\n\nexport interface AccountUnlockOptions extends\n  RunOptions,\n  IdentifyValues,\n  SelectAuthenticatorUnlockAccountValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  AuthenticatorVerificationDataValues\n{}\n\nexport interface ProceedOptions extends\n  AuthenticationOptions,\n  RegistrationOptions,\n  PasswordRecoveryOptions,\n  AccountUnlockOptions,\n  EnrollPollOptions,\n  SelectEnrollmentChannelOptions\n{}\n\nexport type CancelOptions = IdxOptions\n\nexport type StartOptions = RunOptions\n\nexport interface IdxTransactionMetaOptions\n  extends TransactionMetaOptions,\n  Pick<IdxTransactionMeta,\n    'state' |\n    'codeChallenge' |\n    'codeChallengeMethod' |\n    'codeVerifier' |\n    'flow' |\n    'activationToken' |\n    'recoveryToken'\n  >\n{}\n\nexport interface OktaAuthIdxOptions \n  extends OktaAuthCoreOptions,\n  Pick<IdxTransactionMeta,\n    'flow' |\n    'activationToken' |\n    'recoveryToken'\n  >\n{\n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx?: Pick<RunOptions,\n      'useGenericRemediator' |\n      'exchangeCodeForTokens'\n    >;\n}\n\nexport type OktaAuthIdxOptionsConstructor = OktaAuthOptionsConstructor<OktaAuthIdxOptions>;\n"],"mappings":""}