{"version":3,"file":"clock.js","names":["SdkClock","constructor","localOffset","parseInt","create","now","Date"],"sources":["../../lib/clock.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,MAAMA,QAAQ,CAAC;EAG5BC,WAAW,CAACC,WAAW,EAAE;IACvB;IACA,IAAI,CAACA,WAAW,GAAGC,QAAQ,CAACD,WAAW,IAAI,CAAC,CAAC;EAC/C;;EAEA;EACA,OAAOE,MAAM,GAA+B;IAC1C;IACA,IAAIF,WAAW,GAAG,CAAC;IACnB,OAAO,IAAIF,QAAQ,CAACE,WAAW,CAAC;EAClC;;EAEA;EACAG,GAAG,GAAG;IACJ,IAAIA,GAAG,GAAG,CAACC,IAAI,CAACD,GAAG,EAAE,GAAG,IAAI,CAACH,WAAW,IAAI,IAAI;IAChD,OAAOG,GAAG;EACZ;AACF;AAAC;AAAA"}