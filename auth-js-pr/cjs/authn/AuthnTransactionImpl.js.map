{"version":3,"file":"AuthnTransactionImpl.js","names":["AuthnTransactionImpl","constructor","sdk","tx","res","data","undefined","status","Object","assign","flattenEmbedded","stateToken","_links","cancel","Promise","resolve","createTransaction"],"sources":["../../../lib/authn/AuthnTransactionImpl.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { OktaAuthHttpInterface } from '../http/types';\nimport {\n  AuthnTransactionFunction,\n  AuthnTransaction,\n  AuthnTransactionAPI,\n  AuthnTransactionState\n} from './types';\nimport { flattenEmbedded } from './util/flattenEmbedded';\n\nexport class AuthnTransactionImpl implements AuthnTransaction {\n  next?: AuthnTransactionFunction;\n  cancel?: AuthnTransactionFunction;\n  skip?: AuthnTransactionFunction;\n  unlock?: AuthnTransactionFunction;\n  changePassword?: AuthnTransactionFunction;\n  resetPassword?: AuthnTransactionFunction;\n  answer?: AuthnTransactionFunction;\n  recovery?: AuthnTransactionFunction;\n  verify?: AuthnTransactionFunction;\n  resend?: AuthnTransactionFunction;\n  activate?: AuthnTransactionFunction;\n  poll?: AuthnTransactionFunction;\n  prev?: AuthnTransactionFunction;\n\n  data?: AuthnTransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res: AuthnTransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, tx, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(tx.createTransaction());\n        };\n      }\n    }\n  }\n}\n"],"mappings":";;;AAoBA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWO,MAAMA,oBAAoB,CAA6B;EA0B5DC,WAAW,CAACC,GAA0B,EAAEC,EAAuB,EAAEC,GAAiC,GAAG,IAAI,EAAE;IACzG,IAAI,CAACC,IAAI,GAAGC,SAAS;IACrB,IAAI,CAACC,MAAM,GAAGD,SAA8B;IAC5C,IAAIF,GAAG,EAAE;MACP,IAAI,CAACC,IAAI,GAAGD,GAAG;;MAEf;MACAI,MAAM,CAACC,MAAM,CAAC,IAAI,EAAE,IAAAC,gCAAe,EAACR,GAAG,EAAEC,EAAE,EAAEC,GAAG,EAAEA,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3D,OAAO,IAAI,CAACO,UAAU;;MAEtB;MACA;MACA;MACA;MACA,IAAIP,GAAG,CAACG,MAAM,KAAK,oBAAoB,IAAI,CAACH,GAAG,CAACQ,MAAM,EAAE;QACtD,IAAI,CAACC,MAAM,GAAG,YAAW;UACvB,OAAOC,OAAO,CAACC,OAAO,CAACZ,EAAE,CAACa,iBAAiB,EAAE,CAAC;QAChD,CAAC;MACH;IACF;EACF;AACF;AAAC"}