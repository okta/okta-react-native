{"version":3,"file":"mixin.js","names":["mixinAuthn","Base","OktaAuthTx","constructor","args","authn","tx","createAuthnTransactionAPI","fingerprint","bind","signIn","opts","clone","_postToTransaction","options","sendFingerprint","postToTransaction","then","headers","signInWithCredentials","forgotPassword","unlockAccount","verifyRecoveryToken"],"sources":["../../../lib/authn/mixin.ts"],"sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { \n  clone,\n} from '../util';\nimport fingerprint from '../browser/fingerprint';\nimport {\n  FingerprintAPI,\n  SigninWithCredentialsOptions,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  SigninOptions,\n  OktaAuthTxInterface,\n  AuthnTransaction,\n  AuthnTransactionAPI\n} from './types';\nimport {\n  createAuthnTransactionAPI,\n} from './factory';\nimport { StorageManagerInterface } from '../storage/types';\nimport { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\n\nexport function mixinAuthn\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthTxInterface<S, O>>\n{\n  return class OktaAuthTx extends Base implements OktaAuthTxInterface<S, O> {\n    tx: AuthnTransactionAPI; // legacy, may be removed in future version\n    authn: AuthnTransactionAPI;\n    fingerprint: FingerprintAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.authn = this.tx = createAuthnTransactionAPI(this);\n      \n      // Fingerprint API\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n\n    // Authn  V1\n    async signIn(opts: SigninOptions): Promise<AuthnTransaction> {\n      opts = clone(opts || {});\n      const _postToTransaction = (options?) => {\n        delete opts.sendFingerprint;\n        return this.tx.postToTransaction('/api/v1/authn', opts, options);\n      };\n      if (!opts.sendFingerprint) {\n        return _postToTransaction();\n      }\n      return this.fingerprint()\n      .then(function(fingerprint) {\n        return _postToTransaction({\n          headers: {\n            'X-Device-Fingerprint': fingerprint\n          }\n        });\n      });\n    }\n\n    // Authn  V1\n    async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthnTransaction> {\n      return this.signIn(opts);\n    }\n\n    // { username, (relayState) }\n    forgotPassword(opts): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/password', opts);\n    }\n\n    // { username, (relayState) }\n    unlockAccount(opts: ForgotPasswordOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/unlock', opts);\n    }\n\n    // { recoveryToken }\n    verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/token', opts);\n    }\n\n  };\n}\n"],"mappings":";;;;AAcA;AAGA;AAWA;AA5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAuBO,SAASA,UAAU,CAOzBC,IAAW,EACZ;EACE,OAAO,MAAMC,UAAU,SAASD,IAAI,CAAsC;IAC/C;;IAIzBE,WAAW,CAAC,GAAGC,IAAW,EAAE;MAC1B,KAAK,CAAC,GAAGA,IAAI,CAAC;MAEd,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,EAAE,GAAG,IAAAC,kCAAyB,EAAC,IAAI,CAAC;;MAEtD;MACA,IAAI,CAACC,WAAW,GAAGA,oBAAW,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;IACjD;;IAEA;IACA,MAAMC,MAAM,CAACC,IAAmB,EAA6B;MAC3DA,IAAI,GAAG,IAAAC,WAAK,EAACD,IAAI,IAAI,CAAC,CAAC,CAAC;MACxB,MAAME,kBAAkB,GAAIC,OAAQ,IAAK;QACvC,OAAOH,IAAI,CAACI,eAAe;QAC3B,OAAO,IAAI,CAACT,EAAE,CAACU,iBAAiB,CAAC,eAAe,EAAEL,IAAI,EAAEG,OAAO,CAAC;MAClE,CAAC;MACD,IAAI,CAACH,IAAI,CAACI,eAAe,EAAE;QACzB,OAAOF,kBAAkB,EAAE;MAC7B;MACA,OAAO,IAAI,CAACL,WAAW,EAAE,CACxBS,IAAI,CAAC,UAAST,WAAW,EAAE;QAC1B,OAAOK,kBAAkB,CAAC;UACxBK,OAAO,EAAE;YACP,sBAAsB,EAAEV;UAC1B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMW,qBAAqB,CAACR,IAAkC,EAA6B;MACzF,OAAO,IAAI,CAACD,MAAM,CAACC,IAAI,CAAC;IAC1B;;IAEA;IACAS,cAAc,CAACT,IAAI,EAA6B;MAC9C,OAAO,IAAI,CAACL,EAAE,CAACU,iBAAiB,CAAC,iCAAiC,EAAEL,IAAI,CAAC;IAC3E;;IAEA;IACAU,aAAa,CAACV,IAA2B,EAA6B;MACpE,OAAO,IAAI,CAACL,EAAE,CAACU,iBAAiB,CAAC,+BAA+B,EAAEL,IAAI,CAAC;IACzE;;IAEA;IACAW,mBAAmB,CAACX,IAAgC,EAA6B;MAC/E,OAAO,IAAI,CAACL,EAAE,CAACU,iBAAiB,CAAC,8BAA8B,EAAEL,IAAI,CAAC;IACxE;EAEF,CAAC;AACH"}