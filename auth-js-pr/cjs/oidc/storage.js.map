{"version":3,"file":"storage.js","names":["createOAuthStorageManager","OAuthStorageManager","BaseStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getTransactionStorage","options","getOptionsForSection","logServerSideMemoryStorageWarning","storage","getStorage","storageKey","TRANSACTION_STORAGE_NAME","SavedObject","getSharedTansactionStorage","SHARED_TRANSACTION_STORAGE_NAME","getOriginalUriStorage","ORIGINAL_URI_STORAGE_NAME"],"sources":["../../../lib/oidc/storage.ts"],"sourcesContent":["import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n"],"mappings":";;;AAMA;AAEA;AACA;AAGO,SAASA,yBAAyB,GACzC;EACE,OAAO,MAAMC,mBAAmB,SACtBC,sCAAkB,CAE5B;IACEC,WAAW,CAACC,qBAA4C,EAAEC,aAA4B,EAAEC,WAAwB,EAAE;MAChH,KAAK,CAACF,qBAAqB,EAAEC,aAAa,EAAEC,WAAW,CAAC;IAC1D;IAEAC,qBAAqB,CAACC,OAAwB,EAAyB;MACrEA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,aAAa,EAAED,OAAO,CAAC;MAC3D,IAAAE,qDAAiC,EAACF,OAAO,CAAC;MAC1C,MAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;MACxC,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAIC,mCAAwB;MACjE,OAAO,IAAIC,oBAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;IAC7C;IAEAG,0BAA0B,CAACR,OAAwB,EAAyB;MAC1EA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,oBAAoB,EAAED,OAAO,CAAC;MAClE,IAAAE,qDAAiC,EAACF,OAAO,CAAC;MAC1C,MAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;MACxC,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAII,0CAA+B;MACxE,OAAO,IAAIF,oBAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;IAC7C;IAEAK,qBAAqB,CAACV,OAAwB,EAAyB;MACrEA,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,cAAc,EAAED,OAAO,CAAC;MAC5D,IAAAE,qDAAiC,EAACF,OAAO,CAAC;MAC1C,MAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,OAAO,CAAC;MACxC,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAU,IAAIM,oCAAyB;MAClE,OAAO,IAAIJ,oBAAW,CAACJ,OAAO,EAAEE,UAAU,CAAC;IAC7C;EACF,CAAC;AAEH"}