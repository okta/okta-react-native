{"version":3,"file":"revokeToken.js","names":["revokeToken","sdk","token","accessToken","refreshToken","AuthSdkError","clientId","options","clientSecret","revokeUrl","getOAuthUrls","args","toQueryString","token_type_hint","slice","creds","btoa","post","headers"],"sources":["../../../lib/oidc/revokeToken.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from './types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n"],"mappings":";;;;AAcA;AACA;AACA;AAGA;AACA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAeA;AACO,eAAeA,WAAW,CAACC,GAA2B,EAAEC,KAAqB,EAAgB;EAClG,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAIC,YAAY,GAAG,EAAE;EACrB,IAAIF,KAAK,EAAE;IACPC,WAAW,GAAID,KAAK,CAAiBC,WAAW;IAChDC,YAAY,GAAIF,KAAK,CAAkBE,YAAY;EACvD;EACA,IAAG,CAACD,WAAW,IAAI,CAACC,YAAY,EAAE;IAChC,MAAM,IAAIC,qBAAY,CAAC,oDAAoD,CAAC;EAC9E;EACA,IAAIC,QAAQ,GAAGL,GAAG,CAACM,OAAO,CAACD,QAAQ;EACnC,IAAIE,YAAY,GAAGP,GAAG,CAACM,OAAO,CAACC,YAAY;EAC3C,IAAI,CAACF,QAAQ,EAAE;IACb,MAAM,IAAID,qBAAY,CAAC,4EAA4E,CAAC;EACtG;EACA;EACA,IAAII,SAAS,GAAG,IAAAC,mBAAY,EAACT,GAAG,CAAC,CAACQ,SAAU;EAC5C,IAAIE,IAAI,GAAG,IAAAC,mBAAa,EAAC;IACvB;IACAC,eAAe,EAAET,YAAY,GAAG,eAAe,GAAG,cAAc;IAChEF,KAAK,EAAEE,YAAY,IAAID;EACzB,CAAC,CAAC,CAACW,KAAK,CAAC,CAAC,CAAC;EACX,IAAIC,KAAK,GAAGP,YAAY,GAAG,IAAAQ,YAAI,EAAE,GAAEV,QAAS,IAAGE,YAAa,EAAC,CAAC,GAAG,IAAAQ,YAAI,EAACV,QAAQ,CAAC;EAC/E,OAAO,IAAAW,UAAI,EAAChB,GAAG,EAAEQ,SAAS,EAAEE,IAAI,EAAE;IAChCO,OAAO,EAAE;MACP,cAAc,EAAE,mCAAmC;MACnD,eAAe,EAAE,QAAQ,GAAGH;IAC9B;EACF,CAAC,CAAC;AACJ"}