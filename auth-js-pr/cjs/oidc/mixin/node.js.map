{"version":3,"file":"node.js","names":["provideOriginalUri","BaseClass","NodeOriginalUri","setOriginalUri","originalUri","state","options","sharedStorage","storageManager","getOriginalUriStorage","setItem","getOriginalUri","getItem","removeOriginalUri","removeItem"],"sources":["../../../../lib/oidc/mixin/node.ts"],"sourcesContent":["\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) //: TBase & OktaAuthConstructor<O, I & OriginalUriApi>\n{\n  return class NodeOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n"],"mappings":";;;AAWO,SAASA,kBAAkB,CAQjCC,SAAgB;AAAE;AACnB;EACE,OAAO,MAAMC,eAAe,SAASD,SAAS,CAA2B;IACvEE,cAAc,CAACC,WAAmB,EAAEC,KAAc,EAAQ;MACxD;MACAA,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACC,OAAO,CAACD,KAAK;MACnC,IAAIA,KAAK,EAAE;QACT,MAAME,aAAa,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,EAAE;QACjEF,aAAa,CAACG,OAAO,CAACL,KAAK,EAAED,WAAW,CAAC;MAC3C;IACF;IAEAO,cAAc,CAACN,KAAc,EAAsB;MACjD;MACAA,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACC,OAAO,CAACD,KAAK;MACnC,IAAIA,KAAK,EAAE;QACT,MAAME,aAAa,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,EAAE;QACjE,MAAML,WAAW,GAAGG,aAAa,CAACK,OAAO,CAACP,KAAK,CAAC;QAChD,IAAID,WAAW,EAAE;UACf,OAAOA,WAAW;QACpB;MACF;IACF;IAEAS,iBAAiB,CAACR,KAAc,EAAQ;MACtC;MACAA,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACC,OAAO,CAACD,KAAK;MACnC,IAAIA,KAAK,EAAE;QACT,MAAME,aAAa,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,EAAE;QACjEF,aAAa,CAACO,UAAU,IAAIP,aAAa,CAACO,UAAU,CAACT,KAAK,CAAC;MAC7D;IACF;EACF,CAAC;AACH"}