{"version":3,"file":"getWithRedirect.js","names":["getWithRedirect","sdk","options","arguments","length","Promise","reject","AuthSdkError","clone","tokenParams","prepareTokenParams","meta","createOAuthMeta","requestUrl","urls","authorizeUrl","buildAuthorizeParams","transactionManager","save","setLocation","window","location","assign"],"sources":["../../../lib/oidc/getWithRedirect.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from './types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n"],"mappings":";;;AAaA;AAEA;AACA;AACA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOO,eAAeA,eAAe,CAACC,GAA2B,EAAEC,OAAqB,EAAiB;EACvG,IAAIC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACxB,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,oBAAY,CAAC,yEAAyE,CAAC,CAAC;EACpH;EAEAL,OAAO,GAAG,IAAAM,WAAK,EAACN,OAAO,CAAC,IAAI,CAAC,CAAC;EAE9B,MAAMO,WAAW,GAAG,MAAM,IAAAC,yBAAkB,EAACT,GAAG,EAAEC,OAAO,CAAC;EAC1D,MAAMS,IAAI,GAAG,IAAAC,sBAAe,EAACX,GAAG,EAAEQ,WAAW,CAAC;EAC9C,MAAMI,UAAU,GAAGF,IAAI,CAACG,IAAI,CAACC,YAAY,GAAG,IAAAC,+BAAoB,EAACP,WAAW,CAAC;EAC7ER,GAAG,CAACgB,kBAAkB,CAACC,IAAI,CAACP,IAAI,CAAC;EACjC,IAAIV,GAAG,CAACC,OAAO,CAACiB,WAAW,EAAE;IAC3BlB,GAAG,CAACC,OAAO,CAACiB,WAAW,CAACN,UAAU,CAAC;EACrC,CAAC,MAAM;IACLO,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACT,UAAU,CAAC;EACpC;AACF"}