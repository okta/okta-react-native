{"version":3,"file":"url.js","names":["isAbsoluteUrl","url","test","toAbsoluteUrl","baseUrl","removeTrailingSlash","toRelativeUrl","substring","length","toQueryString","obj","str","key","Object","prototype","hasOwnProperty","call","undefined","push","encodeURIComponent","join","path","trimmed","replace"],"sources":["../../../lib/util/url.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^[a-z][a-z0-9+.-]*:/i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASA,aAAa,CAACC,GAAG,EAAE;EACjC,OAAO,sBAAsB,CAACC,IAAI,CAACD,GAAG,CAAC;AACzC;AAEO,SAASE,aAAa,CAACF,GAAG,GAAG,EAAE,EAAEG,OAAO,EAAE;EAC/C,IAAIJ,aAAa,CAACC,GAAG,CAAC,EAAE;IACtB,OAAOA,GAAG;EACZ;EACAG,OAAO,GAAGC,mBAAmB,CAACD,OAAO,CAAC;EACtC,OAAOH,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAI,GAAEG,OAAQ,GAAEH,GAAI,EAAC,GAAI,GAAEG,OAAQ,IAAGH,GAAI,EAAC;AAClE;AAEO,SAASK,aAAa,CAACL,GAAG,GAAG,EAAE,EAAEG,OAAO,EAAE;EAC/C,IAAIJ,aAAa,CAACC,GAAG,CAAC,EAAE;IACtBA,GAAG,GAAGA,GAAG,CAACM,SAAS,CAACH,OAAO,CAACI,MAAM,CAAC;EACrC;EAEA,OAAOP,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,GAAG,GAAI,IAAGA,GAAI,EAAC;AACzC;AAEO,SAASQ,aAAa,CAACC,GAAG,EAAE;EACjC,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAID,GAAG,KAAK,IAAI,EAAE;IAChB,KAAK,IAAIE,GAAG,IAAIF,GAAG,EAAE;MACnB,IAAIG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,GAAG,EAAEE,GAAG,CAAC,IAC9CF,GAAG,CAACE,GAAG,CAAC,KAAKK,SAAS,IACtBP,GAAG,CAACE,GAAG,CAAC,KAAK,IAAI,EAAE;QACrBD,GAAG,CAACO,IAAI,CAACN,GAAG,GAAG,GAAG,GAAGO,kBAAkB,CAACT,GAAG,CAACE,GAAG,CAAC,CAAC,CAAU;MAC7D;IACF;EACF;EACA,IAAID,GAAG,CAACH,MAAM,EAAE;IACd,OAAO,GAAG,GAAGG,GAAG,CAACS,IAAI,CAAC,GAAG,CAAC;EAC5B,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF;AAEO,SAASf,mBAAmB,CAACgB,IAAI,EAAE;EACxC,IAAI,CAACA,IAAI,EAAE;IACT;EACF;EACA;EACA,IAAIC,OAAO,GAAGD,IAAI,CAACE,OAAO,CAAC,aAAa,EAAC,EAAE,CAAC;EAC5C;EACAD,OAAO,GAAGA,OAAO,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAErC,OAAOD,OAAO;AAChB"}