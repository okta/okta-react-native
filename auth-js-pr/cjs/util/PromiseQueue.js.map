{"version":3,"file":"PromiseQueue.js","names":["PromiseQueue","constructor","options","quiet","queue","running","push","method","thisObject","args","Promise","resolve","reject","length","warn","run","queueItem","shift","res","apply","isPromise","then","finally"],"sources":["../../../lib/util/PromiseQueue.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './types';\nimport { warn } from './console';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nexport class PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n"],"mappings":";;;AAgBA;AACA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAgBO,MAAMA,YAAY,CAAC;EAKxBC,WAAW,CAACC,OAA4B,GAAG;IAAEC,KAAK,EAAE;EAAM,CAAC,EAAE;IAC3D,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACH,OAAO,GAAGA,OAAO;EACxB;;EAEA;EACA;EACA;EACAI,IAAI,CAACC,MAA6B,EAAEC,UAAe,EAAE,GAAGC,IAAW,EAAE;IACnE,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,IAAI,CAACR,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE;QACzB;QACA;QACA,IAAI,IAAI,CAACX,OAAO,CAACC,KAAK,KAAK,KAAK,EAAE;UAChC,IAAAW,aAAI,EACF,4EAA4E,GAC5E,qEAAqE,CACtE;QACH;MACF;MACA,IAAI,CAACV,KAAK,CAACE,IAAI,CAAC;QACdC,MAAM;QACNC,UAAU;QACVC,IAAI;QACJE,OAAO;QACPC;MACF,CAAC,CAAC;MACF,IAAI,CAACG,GAAG,EAAE;IACZ,CAAC,CAAC;EACJ;EAEAA,GAAG,GAAG;IACJ,IAAI,IAAI,CAACV,OAAO,EAAE;MAChB;IACF;IACA,IAAI,IAAI,CAACD,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MAC3B;IACF;IACA,IAAI,CAACR,OAAO,GAAG,IAAI;IACnB;IACA,IAAIW,SAAS,GAAG,IAAI,CAACZ,KAAK,CAACa,KAAK,EAAG;IACnC,IAAIC,GAAG,GAAGF,SAAS,CAACT,MAAM,CAACY,KAAK,CAACH,SAAS,CAACR,UAAU,EAAEQ,SAAS,CAACP,IAAI,CAAqB;IAC1F,IAAI,IAAAW,gBAAS,EAACF,GAAG,CAAC,EAAE;MACjBA,GAAG,CAAsBG,IAAI,CAACL,SAAS,CAACL,OAAO,EAAEK,SAAS,CAACJ,MAAM,CAAC,CAACU,OAAO,CAAC,MAAM;QAChF,IAAI,CAACjB,OAAO,GAAG,KAAK;QACpB,IAAI,CAACU,GAAG,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,MAAM;MACLC,SAAS,CAACL,OAAO,CAACO,GAAG,CAAC;MACtB,IAAI,CAACb,OAAO,GAAG,KAAK;MACpB,IAAI,CAACU,GAAG,EAAE;IACZ;EACF;AACF;AAAC"}