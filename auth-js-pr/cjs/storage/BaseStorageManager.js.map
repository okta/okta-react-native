{"version":3,"file":"BaseStorageManager.js","names":["logServerSideMemoryStorageWarning","options","isBrowser","storageProvider","storageKey","warn","BaseStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getOptionsForSection","sectionName","overrideOptions","Object","assign","getStorage","storageType","storageTypes","sessionCookie","idx","indexOf","slice","undefined","findStorageType","getStorageByType","getTokenStorage","storage","TOKEN_STORAGE_NAME","SavedObject","getHttpCache","CACHE_STORAGE_NAME"],"sources":["../../../lib/storage/BaseStorageManager.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n} from '../constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  CookieOptions,\n  StorageManagerOptions,\n  SimpleStorage,\n  StorageManagerInterface\n} from './types';\nimport { SavedObject } from './SavedObject';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\n\nexport function logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\n\nexport class BaseStorageManager implements StorageManagerInterface {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // If both storageType and storageTypes are specified, then storageType will be used first\n    // If storageType cannot be used but it matches an entry in storageTypes, subsequent entries may be used as fallback\n    // if storageType does not match an entry in storageTypes then storageType is used with no fallback.\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n"],"mappings":";;;;AAcA;AAaA;AACA;AACA;AA7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAqBO,SAASA,iCAAiC,CAACC,OAAuB,EAAE;EACzE,IAAI,CAAC,IAAAC,mBAAS,GAAE,IAAI,CAACD,OAAO,CAACE,eAAe,IAAI,CAACF,OAAO,CAACG,UAAU,EAAE;IACnE;IACA,IAAAC,UAAI,EAAC,6KAA6K,CAAC;EACrL;AACF;AAGO,MAAMC,kBAAkB,CAAoC;EAKjEC,WAAW,CAACC,qBAA4C,EAAEC,aAA4B,EAAEC,WAAwB,EAAE;IAChH,IAAI,CAACF,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,WAAW,GAAGA,WAAW;EAChC;;EAEA;EACAC,oBAAoB,CAACC,WAAmB,EAAEC,eAAgC,EAAE;IAC1E,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACP,qBAAqB,CAACI,WAAW,CAAC,EAAEC,eAAe,CAAC;EACpF;;EAEA;EACA;EACAG,UAAU,CAACf,OAAuB,EAAiB;IACjDA,OAAO,GAAGa,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACN,aAAa,EAAER,OAAO,CAAC,CAAC,CAAC;;IAE1D,IAAIA,OAAO,CAACE,eAAe,EAAE;MAC3B,OAAOF,OAAO,CAACE,eAAe;IAChC;IAEA,IAAI;MAAEc,WAAW;MAAEC;IAAa,CAAC,GAAGjB,OAAO;IAE3C,IAAGgB,WAAW,KAAK,gBAAgB,EAAE;MACnChB,OAAO,CAACkB,aAAa,GAAG,IAAI;IAC9B;;IAEA;IACA;IACA;IACA,IAAIF,WAAW,IAAIC,YAAY,EAAE;MAC/B,MAAME,GAAG,GAAGF,YAAY,CAACG,OAAO,CAACJ,WAAW,CAAC;MAC7C,IAAIG,GAAG,IAAI,CAAC,EAAE;QACZF,YAAY,GAAGA,YAAY,CAACI,KAAK,CAACF,GAAG,CAAC;QACtCH,WAAW,GAAGM,SAAS;MACzB;IACF;IAEA,IAAI,CAACN,WAAW,EAAE;MAChB;MACAA,WAAW,GAAG,IAAI,CAACP,WAAW,CAACc,eAAe,CAACN,YAAY,CAAE;IAC/D;IACA,OAAO,IAAI,CAACR,WAAW,CAACe,gBAAgB,CAACR,WAAW,EAAEhB,OAAO,CAAC;EAChE;;EAEA;EACAyB,eAAe,CAACzB,OAAwB,EAAmB;IACzDA,OAAO,GAAG,IAAI,CAACU,oBAAoB,CAAC,OAAO,EAAEV,OAAO,CAAC;IACrDD,iCAAiC,CAACC,OAAO,CAAC;IAC1C,MAAM0B,OAAO,GAAG,IAAI,CAACX,UAAU,CAACf,OAAO,CAAC;IACxC,MAAMG,UAAU,GAAGH,OAAO,CAACG,UAAU,IAAIwB,6BAAkB;IAC3D,OAAO,IAAIC,wBAAW,CAACF,OAAO,EAAEvB,UAAU,CAAC;EAC7C;;EAEA;EACA0B,YAAY,CAAC7B,OAAwB,EAAmB;IACtDA,OAAO,GAAG,IAAI,CAACU,oBAAoB,CAAC,OAAO,EAAEV,OAAO,CAAC;IACrD,MAAM0B,OAAO,GAAG,IAAI,CAACX,UAAU,CAACf,OAAO,CAAC;IACxC,MAAMG,UAAU,GAAGH,OAAO,CAACG,UAAU,IAAI2B,6BAAkB;IAC3D,OAAO,IAAIF,wBAAW,CAACF,OAAO,EAAEvB,UAAU,CAAC;EAC7C;AAEF;AAAC"}